{
  "name": "influxdb-grafana-ext",
  "id": "influxdb-grafana-ext",
  "description": "",
  "created_on": "20/10/2022, 09:49:11",
  "last_modify": "21/10/2022, 15:24:46",
  "graphs": {
    "main": {
      "nodes": [
        {
          "id": "41f411cc-4327-4e9e-88f6-b858e5a07ffd",
          "position": {
            "x": 967.4871673063028,
            "y": -139.23990355043227
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "CSV Reader",
            "events": null,
            "description": "### Description\nThe CSV READER component allows reading files in csv format. \n\nYou have the possibility to set a separator using the **Separator** parameter. The **Infer types** parameter allows the automatic transformation of the type of non-textual fields.\n\n### Input\nThe input required by this component is the file path in PosixPath format. However, the file path can also be defined when the component is created, in which case no input is required.\n\n### Output\nThe submitted file is returned row by row, where each row is represented by a dictionary that has the column names as keys.",
            "inputs": [
              {
                "id": "input",
                "label": "input"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Inputs",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "value",
                  "type": "files",
                  "label": "File",
                  "fragment": "files",
                  "helper": "choose a file or read input"
                },
                {
                  "name": "separator",
                  "type": "text",
                  "label": "Separator"
                },
                {
                  "name": "df",
                  "type": "boolean",
                  "label": "Dask Dataframe"
                },
                {
                  "name": "infer_type",
                  "type": "boolean",
                  "label": "Infer types"
                },
                {
                  "name": "propagate",
                  "type": "boolean",
                  "label": "Flush at the end"
                }
              ],
              "click": "Send file",
              "icon": "RiFileChart2Fill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": false,
                "separator": ",",
                "df": false,
                "infer_type": true,
                "propagate": true,
                "value": {
                  "name": "fake_data.csv",
                  "path": "data/data/fake_data.csv",
                  "parent": "data/data",
                  "isDir": false,
                  "hidden": false
                }
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 967.4871673063028,
            "y": -139.23990355043227
          },
          "__class__": "Node"
        },
        {
          "id": "7ad6908c-2926-4b13-a9d5-c57893159358",
          "position": {
            "x": 1161.458910294773,
            "y": -121.4022554319136
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Grouper",
            "events": null,
            "description": "### Description\nThe GROUPER component is used to group the elements received in input. The items will be returned in batches with a maximum size equal to **Group size**.\n\n### Input\nIn this case there is no fixed input format.\n\n### Output\nIn output lists of elements received in input with a maximum length equal to **Group size**.",
            "inputs": [
              {
                "id": "input",
                "label": "input"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "n",
                  "label": "Group size",
                  "type": "number"
                }
              ],
              "click": null,
              "icon": "RiGroupFill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": false,
                "n": "80"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 1161.458910294773,
            "y": -121.4022554319136
          },
          "__class__": "Node"
        },
        {
          "id": "0b0d3081-1e1f-406f-b56d-65e5933c5ddc",
          "position": {
            "x": 971.6811241476034,
            "y": 319.80156789817704
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Trigger",
            "events": null,
            "description": "### Description\nThe TRIGGER component is used to start streams.\n\n### Output\nThe parameter Type can be set as a **String** or an **Object**. The parameter Value, on the other hand, defines the actual output of the component.",
            "inputs": [],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "type",
                  "type": "select",
                  "description": "The type of data",
                  "label": "Type",
                  "validation": {
                    "required": "Required field"
                  },
                  "fragment": null,
                  "advanced": false,
                  "options": [
                    "String",
                    "Object"
                  ],
                  "value": null
                },
                {
                  "name": "value",
                  "type": "dynamic",
                  "dynamicType": {
                    "String": "area",
                    "Object": "code"
                  },
                  "parent": "type",
                  "label": "Value",
                  "validation": {
                    "required": "Required field"
                  }
                }
              ],
              "click": "Send message",
              "icon": "RiPlayFill",
              "values": {
                "type": "String",
                "value": "Hello world!"
              }
            }
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 971.6811241476034,
            "y": 319.80156789817704
          },
          "__class__": "Node"
        },
        {
          "id": "fdcc8252-a470-4f3d-b392-6df494ad0129",
          "position": {
            "x": 924.1510412896512,
            "y": 281.2898035024454
          },
          "type": "comment",
          "dragHandle": "#commentHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 1019.9386379396681,
          "height": 147,
          "selected": false,
          "dragging": false,
          "data": {
            "comment": "delete",
            "fill": "#F74B65",
            "height": 147,
            "width": 1019.9386379396681
          },
          "zIndex": -1,
          "selectable": false,
          "connectable": false,
          "positionAbsolute": {
            "x": 924.1510412896512,
            "y": 281.2898035024454
          },
          "__class__": "Node"
        },
        {
          "id": "550183ab-89b7-49ed-bb5b-0b9baa62b110",
          "position": {
            "x": 924.7741642705323,
            "y": 498.4679769098426
          },
          "type": "comment",
          "dragHandle": "#commentHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 689.8767495472596,
          "height": 188,
          "selected": false,
          "dragging": false,
          "data": {
            "comment": "query",
            "fill": "#F9C74F",
            "height": 188,
            "width": 689.8767495472596
          },
          "zIndex": -1,
          "selectable": false,
          "connectable": false,
          "positionAbsolute": {
            "x": 924.7741642705323,
            "y": 498.4679769098426
          },
          "__class__": "Node"
        },
        {
          "id": "00d16a85-9ca1-4333-b4ba-5ada362b9281",
          "position": {
            "x": 927.4871673063028,
            "y": -179.23990355043227
          },
          "type": "comment",
          "dragHandle": "#commentHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 1704.7319189193051,
          "height": 136,
          "selected": false,
          "dragging": false,
          "data": {
            "comment": "Save new data",
            "fill": "#90BE6D",
            "height": 136,
            "width": 1704.7319189193051
          },
          "zIndex": -1,
          "selectable": false,
          "connectable": false,
          "__class__": "Node"
        },
        {
          "id": "73c15504-172b-4284-ac1a-822aa19aeada",
          "position": {
            "x": 1757.6927831107714,
            "y": 537.6431174117645
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Grouper",
            "events": null,
            "description": "### Description\nThe GROUPER component is used to group the elements received in input. The items will be returned in batches with a maximum size equal to **Group size**.\n\n### Input\nIn this case there is no fixed input format.\n\n### Output\nIn output lists of elements received in input with a maximum length equal to **Group size**.",
            "inputs": [
              {
                "id": "input",
                "label": "input",
                "closed": false
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "n",
                  "label": "Group size",
                  "type": "number"
                }
              ],
              "click": null,
              "icon": "RiGroupFill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": true,
                "n": "1000"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 1757.6927831107714,
            "y": 537.6431174117645
          },
          "__class__": "Node"
        },
        {
          "id": "56d0ebfc-963c-41fd-90c1-419829d55a59",
          "position": {
            "x": 957,
            "y": 550
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Array",
            "events": null,
            "description": "### Description\nThe ARRAY component is used as an iterator. The array to iterate over can be defined with the parameter value or depend on the input received.\n\n### Input\nIn case an input is given, it will correspond to the data to iterate on.\n\n### Output\nThe number of outputs depends on the length of what is passed in input or defined in the parameter value. The output will consist of iterating element by element.",
            "inputs": [
              {
                "id": "input",
                "label": "input"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "value",
                  "type": "text",
                  "description": "Python or json code that evaluates to a list or iterable",
                  "label": "value",
                  "validation": null,
                  "fragment": null,
                  "advanced": false,
                  "options": null,
                  "value": null
                },
                {
                  "name": "propagate",
                  "type": "boolean",
                  "label": "Flush at the end"
                },
                {
                  "name": "flatten",
                  "type": "boolean",
                  "label": "Flatten the array recursively"
                }
              ],
              "click": "Send message",
              "icon": "RiBracketsFill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": false,
                "value": "[1,2,3,4,5]",
                "propagate": true,
                "flatten": false
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 957,
            "y": 550
          },
          "__class__": "Node"
        },
        {
          "id": "d08bb476-31b1-4464-bb42-94a1f9679811",
          "position": {
            "x": 965.6718230435426,
            "y": 74.0808004644764
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 88,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Trigger",
            "events": null,
            "description": "### Description\nThe TRIGGER component is used to start streams.\n\n### Output\nThe parameter Type can be set as a **String** or an **Object**. The parameter Value, on the other hand, defines the actual output of the component.",
            "inputs": [],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "type",
                  "type": "select",
                  "description": "The type of data",
                  "label": "Type",
                  "validation": {
                    "required": "Required field"
                  },
                  "fragment": null,
                  "advanced": false,
                  "options": [
                    "String",
                    "Object"
                  ],
                  "value": null
                },
                {
                  "name": "value",
                  "type": "dynamic",
                  "dynamicType": {
                    "String": "area",
                    "Object": "code"
                  },
                  "parent": "type",
                  "label": "Value",
                  "validation": {
                    "required": "Required field"
                  }
                }
              ],
              "click": "Send message",
              "icon": "RiPlayFill",
              "values": {
                "type": "String",
                "value": "Hello world!"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 965.6718230435426,
            "y": 74.0808004644764
          },
          "__class__": "Node"
        },
        {
          "id": "93de36d7-0240-46b9-ab61-9a8825cc6952",
          "position": {
            "x": 925.6718230435426,
            "y": 34.0808004644764
          },
          "type": "comment",
          "dragHandle": "#commentHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 536,
          "height": 199,
          "selected": false,
          "dragging": false,
          "data": {
            "comment": "Read",
            "fill": "#277DA1",
            "height": 199,
            "width": 536
          },
          "zIndex": -1,
          "selectable": false,
          "connectable": false,
          "__class__": "Node"
        },
        {
          "id": "0a11bda7-fc6d-4649-a6eb-d3543d33dcd8",
          "position": {
            "x": 1161.2703813167197,
            "y": 539.0529104091545
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Function",
            "events": null,
            "description": "### Description\nThe FUNCTION component is used to apply Python code to the input component's. The input can be retrieved using the variable *data*.\n\nTo be able to use data from components of type FUNCTION that are not linked together, the object is set repository.\n\n```python\nrepository.set('value', 5) - this sets the variable value to 5.\nrepository.get('value') - in this way the variable is called value and the value 5 is returned.\n```\n\n### Input\nThe input is used by the component using the variable **data**.\n\n### Output\nThe output coincides with the return of the code defined when the component was created.",
            "inputs": [
              {
                "id": "input",
                "label": "input"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "propagate",
                  "type": "boolean",
                  "label": "Flush at the end"
                },
                {
                  "name": "notify_warnings",
                  "type": "boolean",
                  "label": "Notify warnings"
                },
                {
                  "name": "code",
                  "type": "code",
                  "description": "A python function that processes the incoming message. \nVariables available are:\n- **data**: the incoming message\n",
                  "label": "Code",
                  "validation": {
                    "required": "Required field"
                  },
                  "fragment": null,
                  "advanced": false,
                  "options": null,
                  "value": null
                }
              ],
              "click": null,
              "icon": "RiCodeSSlashFill",
              "values": {
                "comment": "",
                "alias": "query",
                "debug": false,
                "propagate": true,
                "notify_warnings": true,
                "code": "from datetime import datetime\n\nbucket = 'influx-bu'\nstart = '1970-01-01T00:00:00Z'\nstop = datetime.now().strftime(\"%Y-%m-%dT%H:%M:%SZ\")\nreturn f'from(bucket:\"{bucket}\") |> range(start: {start}, stop: {stop})'"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 1161.2703813167197,
            "y": 539.0529104091545
          },
          "__class__": "Node"
        },
        {
          "id": "28932479-4bae-4255-b74a-bca07f4b9dee",
          "position": {
            "x": 1430.6811241476034,
            "y": 311.80156789817704
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 88,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Trigger",
            "events": null,
            "description": "### Description\nThe TRIGGER component is used to start streams.\n\n### Output\nThe parameter Type can be set as a **String** or an **Object**. The parameter Value, on the other hand, defines the actual output of the component.",
            "inputs": [],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "type",
                  "type": "select",
                  "description": "The type of data",
                  "label": "Type",
                  "validation": {
                    "required": "Required field"
                  },
                  "fragment": null,
                  "advanced": false,
                  "options": [
                    "String",
                    "Object"
                  ],
                  "value": null
                },
                {
                  "name": "value",
                  "type": "dynamic",
                  "dynamicType": {
                    "String": "area",
                    "Object": "code"
                  },
                  "parent": "type",
                  "label": "Value",
                  "validation": {
                    "required": "Required field"
                  }
                }
              ],
              "click": "Send message",
              "icon": "RiPlayFill",
              "values": {
                "comment": "",
                "alias": "From query",
                "debug": false,
                "type": "String",
                "value": "_measurement=\"fake_data\""
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 1430.6811241476034,
            "y": 311.80156789817704
          },
          "__class__": "Node"
        },
        {
          "id": "d0ec7c81-8c15-48f2-99e9-3c9fff920e3c",
          "position": {
            "x": 1195,
            "y": 334
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 80,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "InfluxDB",
            "events": null,
            "description": "",
            "inputs": [
              {
                "id": "save",
                "label": "Save",
                "service": "save_data",
                "to": "save"
              },
              {
                "id": "read",
                "label": "Read",
                "service": "read",
                "to": "read"
              },
              {
                "id": "delete",
                "label": "Delete",
                "service": "delete_data",
                "to": "delete"
              },
              {
                "id": "query",
                "label": "Query",
                "service": "query",
                "to": "query"
              }
            ],
            "outputs": [
              {
                "id": "save",
                "label": "Save"
              },
              {
                "id": "read",
                "label": "Read"
              },
              {
                "id": "delete",
                "label": "Delete"
              },
              {
                "id": "query",
                "label": "Query"
              }
            ],
            "configured": true,
            "options": {
              "group": "Custom",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "bucket_save",
                  "type": "text",
                  "label": "Bucket Name",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": "influx-bu",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "measurement_name",
                  "type": "text",
                  "label": "Measurement Name",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": null,
                  "description": "",
                  "validation": null
                },
                {
                  "name": "time",
                  "type": "text",
                  "label": "Time Key",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": null,
                  "description": "",
                  "validation": null
                },
                {
                  "name": "tags",
                  "type": "multiKeyValue",
                  "label": "Tags",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "fields": [
                    {
                      "name": "tag_key",
                      "placeholder": "Tag Key",
                      "validation": null
                    }
                  ]
                },
                {
                  "name": "fields",
                  "type": "multiKeyValue",
                  "label": "Fields",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "fields": [
                    {
                      "name": "field_key",
                      "placeholder": "Field Key",
                      "validation": null
                    }
                  ]
                },
                {
                  "name": "bucket_del",
                  "type": "text",
                  "label": "Bucket Name",
                  "helper": "",
                  "group": "Delete Parameters",
                  "value": "influx-bu",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "from_query_del",
                  "type": "boolean",
                  "label": "From query",
                  "helper": "",
                  "group": "Delete Parameters",
                  "value": false,
                  "description": "",
                  "validation": null
                },
                {
                  "name": "measurement_delete",
                  "type": "dynamic",
                  "label": "Measurement Name",
                  "helper": "",
                  "group": "Delete Parameters",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "parent": "from_query_del",
                  "condition": "!{parent}",
                  "dynamicType": "text",
                  "options": null
                },
                {
                  "name": "start_delete",
                  "type": "text",
                  "label": "Start",
                  "helper": "Define the starting time to consider for deleting your data",
                  "group": "Delete Parameters",
                  "value": "1970-01-01T00:00:00Z",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "stop_delete",
                  "type": "text",
                  "label": "Stop",
                  "helper": "Define the stopping time to consider for deleting your data",
                  "group": "Delete Parameters",
                  "value": null,
                  "description": "",
                  "validation": null
                },
                {
                  "name": "bucket_read",
                  "type": "text",
                  "label": "Bucket Name",
                  "helper": "",
                  "group": "Read Parameters",
                  "value": "influx-bu",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "start_read",
                  "type": "text",
                  "label": "Start",
                  "helper": "Define the starting time to consider for reading your data",
                  "group": "Read Parameters",
                  "value": "1970-01-01T00:00:00Z",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "stop_read",
                  "type": "text",
                  "label": "Stop",
                  "helper": "Define the stopping time to consider for reading your data",
                  "group": "Read Parameters",
                  "value": null,
                  "description": "",
                  "validation": null
                }
              ],
              "click": null,
              "icon": "RiStackFill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": true,
                "bucket_save": "influx-bu",
                "measurement_name": "",
                "time": "",
                "bucket_del": "influx-bu",
                "from_query_del": false,
                "start_delete": "1970-01-01T00:00:00Z",
                "stop_delete": "",
                "bucket_read": "influx-bu",
                "start_read": "1970-01-01T00:00:00Z",
                "stop_read": "",
                "measurement_delete": "sensor"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 1195,
            "y": 334
          },
          "__class__": "Node"
        },
        {
          "id": "35435eae-329c-42ed-9333-58aaa3f4f9e9",
          "position": {
            "x": 1655,
            "y": 331
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 80,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "InfluxDB",
            "events": null,
            "description": "",
            "inputs": [
              {
                "id": "save",
                "label": "Save",
                "service": "save_data",
                "to": "save"
              },
              {
                "id": "read",
                "label": "Read",
                "service": "read",
                "to": "read"
              },
              {
                "id": "delete",
                "label": "Delete",
                "service": "delete_data",
                "to": "delete"
              },
              {
                "id": "query",
                "label": "Query",
                "service": "query",
                "to": "query"
              }
            ],
            "outputs": [
              {
                "id": "save",
                "label": "Save"
              },
              {
                "id": "read",
                "label": "Read"
              },
              {
                "id": "delete",
                "label": "Delete"
              },
              {
                "id": "query",
                "label": "Query"
              }
            ],
            "configured": true,
            "options": {
              "group": "Custom",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "bucket_save",
                  "type": "text",
                  "label": "Bucket Name",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": "influx-bu",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "measurement_name",
                  "type": "text",
                  "label": "Measurement Name",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": null,
                  "description": "",
                  "validation": null
                },
                {
                  "name": "time",
                  "type": "text",
                  "label": "Time Key",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": null,
                  "description": "",
                  "validation": null
                },
                {
                  "name": "tags",
                  "type": "multiKeyValue",
                  "label": "Tags",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "fields": [
                    {
                      "name": "tag_key",
                      "placeholder": "Tag Key",
                      "validation": null
                    }
                  ]
                },
                {
                  "name": "fields",
                  "type": "multiKeyValue",
                  "label": "Fields",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "fields": [
                    {
                      "name": "field_key",
                      "placeholder": "Field Key",
                      "validation": null
                    }
                  ]
                },
                {
                  "name": "bucket_del",
                  "type": "text",
                  "label": "Bucket Name",
                  "helper": "",
                  "group": "Delete Parameters",
                  "value": "influx-bu",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "from_query_del",
                  "type": "boolean",
                  "label": "From query",
                  "helper": "",
                  "group": "Delete Parameters",
                  "value": false,
                  "description": "",
                  "validation": null
                },
                {
                  "name": "measurement_delete",
                  "type": "dynamic",
                  "label": "Measurement Name",
                  "helper": "",
                  "group": "Delete Parameters",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "parent": "from_query_del",
                  "condition": "!{parent}",
                  "dynamicType": "text",
                  "options": null
                },
                {
                  "name": "start_delete",
                  "type": "text",
                  "label": "Start",
                  "helper": "Define the starting time to consider for deleting your data",
                  "group": "Delete Parameters",
                  "value": "1970-01-01T00:00:00Z",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "stop_delete",
                  "type": "text",
                  "label": "Stop",
                  "helper": "Define the stopping time to consider for deleting your data",
                  "group": "Delete Parameters",
                  "value": null,
                  "description": "",
                  "validation": null
                },
                {
                  "name": "bucket_read",
                  "type": "text",
                  "label": "Bucket Name",
                  "helper": "",
                  "group": "Read Parameters",
                  "value": "influx-bu",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "start_read",
                  "type": "text",
                  "label": "Start",
                  "helper": "Define the starting time to consider for reading your data",
                  "group": "Read Parameters",
                  "value": "1970-01-01T00:00:00Z",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "stop_read",
                  "type": "text",
                  "label": "Stop",
                  "helper": "Define the stopping time to consider for reading your data",
                  "group": "Read Parameters",
                  "value": null,
                  "description": "",
                  "validation": null
                }
              ],
              "click": null,
              "icon": "RiStackFill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": true,
                "bucket_save": "influx-bu",
                "measurement_name": "",
                "time": "",
                "bucket_del": "influx-bu",
                "from_query_del": true,
                "start_delete": "1970-01-01T00:00:00Z",
                "stop_delete": "",
                "bucket_read": "influx-bu",
                "start_read": "1970-01-01T00:00:00Z",
                "stop_read": ""
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 1655,
            "y": 331
          },
          "__class__": "Node"
        },
        {
          "id": "0ff5824b-f7d7-4faa-ba2b-cf449636eb06",
          "position": {
            "x": 1395,
            "y": 568
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 80,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "InfluxDB",
            "events": null,
            "description": "",
            "inputs": [
              {
                "id": "save",
                "label": "Save",
                "service": "save_data",
                "to": "save"
              },
              {
                "id": "read",
                "label": "Read",
                "service": "read",
                "to": "read"
              },
              {
                "id": "delete",
                "label": "Delete",
                "service": "delete_data",
                "to": "delete"
              },
              {
                "id": "query",
                "label": "Query",
                "service": "query",
                "to": "query"
              }
            ],
            "outputs": [
              {
                "id": "save",
                "label": "Save"
              },
              {
                "id": "read",
                "label": "Read"
              },
              {
                "id": "delete",
                "label": "Delete"
              },
              {
                "id": "query",
                "label": "Query"
              }
            ],
            "configured": true,
            "options": {
              "group": "Custom",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "bucket_save",
                  "type": "text",
                  "label": "Bucket Name",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": "influx-bu",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "measurement_name",
                  "type": "text",
                  "label": "Measurement Name",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": null,
                  "description": "",
                  "validation": null
                },
                {
                  "name": "time",
                  "type": "text",
                  "label": "Time Key",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": null,
                  "description": "",
                  "validation": null
                },
                {
                  "name": "tags",
                  "type": "multiKeyValue",
                  "label": "Tags",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "fields": [
                    {
                      "name": "tag_key",
                      "placeholder": "Tag Key",
                      "validation": null
                    }
                  ]
                },
                {
                  "name": "fields",
                  "type": "multiKeyValue",
                  "label": "Fields",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "fields": [
                    {
                      "name": "field_key",
                      "placeholder": "Field Key",
                      "validation": null
                    }
                  ]
                },
                {
                  "name": "bucket_del",
                  "type": "text",
                  "label": "Bucket Name",
                  "helper": "",
                  "group": "Delete Parameters",
                  "value": "influx-bu",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "from_query_del",
                  "type": "boolean",
                  "label": "From query",
                  "helper": "",
                  "group": "Delete Parameters",
                  "value": false,
                  "description": "",
                  "validation": null
                },
                {
                  "name": "measurement_delete",
                  "type": "dynamic",
                  "label": "Measurement Name",
                  "helper": "",
                  "group": "Delete Parameters",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "parent": "from_query_del",
                  "condition": "!{parent}",
                  "dynamicType": "text",
                  "options": null
                },
                {
                  "name": "start_delete",
                  "type": "text",
                  "label": "Start",
                  "helper": "Define the starting time to consider for deleting your data",
                  "group": "Delete Parameters",
                  "value": "1970-01-01T00:00:00Z",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "stop_delete",
                  "type": "text",
                  "label": "Stop",
                  "helper": "Define the stopping time to consider for deleting your data",
                  "group": "Delete Parameters",
                  "value": null,
                  "description": "",
                  "validation": null
                },
                {
                  "name": "bucket_read",
                  "type": "text",
                  "label": "Bucket Name",
                  "helper": "",
                  "group": "Read Parameters",
                  "value": "influx-bu",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "start_read",
                  "type": "text",
                  "label": "Start",
                  "helper": "Define the starting time to consider for reading your data",
                  "group": "Read Parameters",
                  "value": "1970-01-01T00:00:00Z",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "stop_read",
                  "type": "text",
                  "label": "Stop",
                  "helper": "Define the stopping time to consider for reading your data",
                  "group": "Read Parameters",
                  "value": null,
                  "description": "",
                  "validation": null
                }
              ],
              "click": null,
              "icon": "RiStackFill",
              "values": {
                "bucket_save": "influx-bu",
                "bucket_del": "influx-bu",
                "start_delete": "1970-01-01T00:00:00Z",
                "bucket_read": "influx-bu",
                "start_read": "1970-01-01T00:00:00Z",
                "debug": true
              }
            }
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 1395,
            "y": 568
          },
          "__class__": "Node"
        },
        {
          "id": "b8f5b458-a66d-414d-ada0-32019d0e55cf",
          "position": {
            "x": 1618,
            "y": -148
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 88,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "CSV Reader",
            "events": null,
            "description": "### Description\nThe CSV READER component allows reading files in csv format. \n\nYou have the possibility to set a separator using the **Separator** parameter. The **Infer types** parameter allows the automatic transformation of the type of non-textual fields.\n\n### Input\nThe input required by this component is the file path in PosixPath format. However, the file path can also be defined when the component is created, in which case no input is required.\n\n### Output\nThe submitted file is returned row by row, where each row is represented by a dictionary that has the column names as keys.",
            "inputs": [
              {
                "id": "input",
                "label": "input"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Inputs",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "value",
                  "type": "files",
                  "label": "File",
                  "fragment": "files",
                  "helper": "choose a file or read input"
                },
                {
                  "name": "separator",
                  "type": "text",
                  "label": "Separator"
                },
                {
                  "name": "df",
                  "type": "boolean",
                  "label": "Dask Dataframe"
                },
                {
                  "name": "infer_type",
                  "type": "boolean",
                  "label": "Infer types"
                },
                {
                  "name": "propagate",
                  "type": "boolean",
                  "label": "Flush at the end"
                }
              ],
              "click": "Send file",
              "icon": "RiFileChart2Fill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": false,
                "separator": ",",
                "df": false,
                "infer_type": true,
                "propagate": true,
                "value": {
                  "name": "sensor.csv",
                  "path": "data/data/sensor.csv",
                  "parent": "data/data",
                  "isDir": false,
                  "hidden": false
                }
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 1618,
            "y": -148
          },
          "__class__": "Node"
        },
        {
          "id": "2cc97caa-b3a0-44cf-acef-b6c62b5e16f9",
          "position": {
            "x": 1822,
            "y": -119
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Function",
            "events": null,
            "description": "### Description\nThe FUNCTION component is used to apply Python code to the input component's. The input can be retrieved using the variable *data*.\n\nTo be able to use data from components of type FUNCTION that are not linked together, the object is set repository.\n\n```python\nrepository.set('value', 5) - this sets the variable value to 5.\nrepository.get('value') - in this way the variable is called value and the value 5 is returned.\n```\n\n### Input\nThe input is used by the component using the variable **data**.\n\n### Output\nThe output coincides with the return of the code defined when the component was created.",
            "inputs": [
              {
                "id": "input",
                "label": "input"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "propagate",
                  "type": "boolean",
                  "label": "Flush at the end"
                },
                {
                  "name": "notify_warnings",
                  "type": "boolean",
                  "label": "Notify warnings"
                },
                {
                  "name": "code",
                  "type": "code",
                  "description": "A python function that processes the incoming message. \nVariables available are:\n- **data**: the incoming message\n",
                  "label": "Code",
                  "validation": {
                    "required": "Required field"
                  },
                  "fragment": null,
                  "advanced": false,
                  "options": null,
                  "value": null
                }
              ],
              "click": null,
              "icon": "RiCodeSSlashFill",
              "values": {
                "comment": "",
                "alias": "Preprocessing",
                "debug": false,
                "propagate": true,
                "notify_warnings": true,
                "code": "measurement = 'sensor'\nfields = [col for col in data.keys() if col.startswith('sensor_')]\ntags = ['machine_status']\ntime = 'timestamp'\n\n_tags = {k: data[k] for k in tags}\n_fields = {k: float(data[k]) if data[k] else None for k in fields}\nrecord = dict(measurement=measurement, tags=_tags, fields=_fields)\nif time:\n    record['time'] = data[time]\n\nreturn record"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 1822,
            "y": -119
          },
          "__class__": "Node"
        },
        {
          "id": "d6af54ab-2ba0-468a-884b-8ea73513bd58",
          "position": {
            "x": 1373,
            "y": -132
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 80,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "InfluxDB",
            "events": null,
            "description": "",
            "inputs": [
              {
                "id": "save",
                "label": "Save",
                "service": "save_data",
                "to": "save"
              },
              {
                "id": "read",
                "label": "Read",
                "service": "read",
                "to": "read"
              },
              {
                "id": "delete",
                "label": "Delete",
                "service": "delete_data",
                "to": "delete"
              },
              {
                "id": "query",
                "label": "Query",
                "service": "query",
                "to": "query"
              }
            ],
            "outputs": [
              {
                "id": "save",
                "label": "Save"
              },
              {
                "id": "read",
                "label": "Read"
              },
              {
                "id": "delete",
                "label": "Delete"
              },
              {
                "id": "query",
                "label": "Query"
              }
            ],
            "configured": true,
            "options": {
              "group": "Custom",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "bucket_save",
                  "type": "text",
                  "label": "Bucket Name",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": "influx-bu",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "manual",
                  "type": "boolean",
                  "label": "Manual",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": true,
                  "description": "",
                  "validation": null
                },
                {
                  "name": "measurement_name",
                  "type": "dynamic",
                  "label": "Measurement Name",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "parent": "manual",
                  "condition": "{parent}",
                  "dynamicType": "text",
                  "options": null,
                  "fields": null,
                  "url": null
                },
                {
                  "name": "time",
                  "type": "dynamic",
                  "label": "Time Key",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "parent": "manual",
                  "condition": "{parent}",
                  "dynamicType": "text",
                  "options": null,
                  "fields": null,
                  "url": null
                },
                {
                  "name": "tags",
                  "type": "dynamic",
                  "label": "Tags",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "parent": "manual",
                  "condition": "{parent}",
                  "dynamicType": "multiKeyValue",
                  "options": null,
                  "fields": [
                    {
                      "name": "tag_key",
                      "placeholder": "Tag Key",
                      "validation": null
                    }
                  ],
                  "url": null
                },
                {
                  "name": "fields",
                  "type": "dynamic",
                  "label": "Fields",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "parent": "manual",
                  "condition": "{parent}",
                  "dynamicType": "multiKeyValue",
                  "options": null,
                  "fields": [
                    {
                      "name": "field_key",
                      "placeholder": "Field Key",
                      "validation": null
                    }
                  ],
                  "url": null
                },
                {
                  "name": "bucket_del",
                  "type": "text",
                  "label": "Bucket Name",
                  "helper": "",
                  "group": "Delete Parameters",
                  "value": "influx-bu",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "from_query_del",
                  "type": "boolean",
                  "label": "From query",
                  "helper": "",
                  "group": "Delete Parameters",
                  "value": false,
                  "description": "",
                  "validation": null
                },
                {
                  "name": "measurement_delete",
                  "type": "dynamic",
                  "label": "Measurement Name",
                  "helper": "",
                  "group": "Delete Parameters",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "parent": "from_query_del",
                  "condition": "!{parent}",
                  "dynamicType": "text",
                  "options": null,
                  "fields": null,
                  "url": null
                },
                {
                  "name": "start_delete",
                  "type": "text",
                  "label": "Start",
                  "helper": "Define the starting time to consider for deleting your data",
                  "group": "Delete Parameters",
                  "value": "1970-01-01T00:00:00Z",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "stop_delete",
                  "type": "text",
                  "label": "Stop",
                  "helper": "Define the stopping time to consider for deleting your data",
                  "group": "Delete Parameters",
                  "value": null,
                  "description": "",
                  "validation": null
                },
                {
                  "name": "bucket_read",
                  "type": "text",
                  "label": "Bucket Name",
                  "helper": "",
                  "group": "Read Parameters",
                  "value": "influx-bu",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "start_read",
                  "type": "text",
                  "label": "Start",
                  "helper": "Define the starting time to consider for reading your data",
                  "group": "Read Parameters",
                  "value": "1970-01-01T00:00:00Z",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "stop_read",
                  "type": "text",
                  "label": "Stop",
                  "helper": "Define the stopping time to consider for reading your data",
                  "group": "Read Parameters",
                  "value": null,
                  "description": "",
                  "validation": null
                }
              ],
              "click": null,
              "icon": "RiStackFill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": true,
                "bucket_save": "influx-bu",
                "manual": true,
                "bucket_del": "influx-bu",
                "from_query_del": false,
                "start_delete": "1970-01-01T00:00:00Z",
                "stop_delete": "",
                "bucket_read": "influx-bu",
                "start_read": "1970-01-01T00:00:00Z",
                "stop_read": "",
                "measurement_delete": "",
                "measurement_name": "fake_data",
                "time": "orario",
                "tags": [
                  {
                    "tag_key": "Linea",
                    "id": "c4347bac-f147-41b4-b48c-03a494e5413d"
                  },
                  {
                    "tag_key": "Traliccio",
                    "id": "e173b619-5f40-4e8f-9549-5b583a66c244"
                  }
                ],
                "fields": [
                  {
                    "field_key": "valore",
                    "id": "14f66e7c-3133-47c4-aae7-7e7bf7b3d55f"
                  }
                ]
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 1373,
            "y": -132
          },
          "__class__": "Node"
        },
        {
          "id": "d3b24ad8-3313-41d1-a560-8df58ff61b32",
          "position": {
            "x": 2397,
            "y": -141
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "InfluxDB",
            "events": null,
            "description": "",
            "inputs": [
              {
                "id": "save",
                "label": "Save",
                "service": "save_data",
                "to": "save"
              },
              {
                "id": "read",
                "label": "Read",
                "service": "read",
                "to": "read"
              },
              {
                "id": "delete",
                "label": "Delete",
                "service": "delete_data",
                "to": "delete"
              },
              {
                "id": "query",
                "label": "Query",
                "service": "query",
                "to": "query"
              }
            ],
            "outputs": [
              {
                "id": "save",
                "label": "Save"
              },
              {
                "id": "read",
                "label": "Read"
              },
              {
                "id": "delete",
                "label": "Delete"
              },
              {
                "id": "query",
                "label": "Query"
              }
            ],
            "configured": true,
            "options": {
              "group": "Custom",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "bucket_save",
                  "type": "text",
                  "label": "Bucket Name",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": "influx-bu",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "manual",
                  "type": "boolean",
                  "label": "Manual",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": true,
                  "description": "",
                  "validation": null
                },
                {
                  "name": "measurement_name",
                  "type": "dynamic",
                  "label": "Measurement Name",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "parent": "manual",
                  "condition": "{parent}",
                  "dynamicType": "text",
                  "options": null,
                  "fields": null,
                  "url": null
                },
                {
                  "name": "time",
                  "type": "dynamic",
                  "label": "Time Key",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "parent": "manual",
                  "condition": "{parent}",
                  "dynamicType": "text",
                  "options": null,
                  "fields": null,
                  "url": null
                },
                {
                  "name": "tags",
                  "type": "dynamic",
                  "label": "Tags",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "parent": "manual",
                  "condition": "{parent}",
                  "dynamicType": "multiKeyValue",
                  "options": null,
                  "fields": [
                    {
                      "name": "tag_key",
                      "placeholder": "Tag Key",
                      "validation": null
                    }
                  ],
                  "url": null
                },
                {
                  "name": "fields",
                  "type": "dynamic",
                  "label": "Fields",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "parent": "manual",
                  "condition": "{parent}",
                  "dynamicType": "multiKeyValue",
                  "options": null,
                  "fields": [
                    {
                      "name": "field_key",
                      "placeholder": "Field Key",
                      "validation": null
                    }
                  ],
                  "url": null
                },
                {
                  "name": "bucket_del",
                  "type": "text",
                  "label": "Bucket Name",
                  "helper": "",
                  "group": "Delete Parameters",
                  "value": "influx-bu",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "from_query_del",
                  "type": "boolean",
                  "label": "From query",
                  "helper": "",
                  "group": "Delete Parameters",
                  "value": false,
                  "description": "",
                  "validation": null
                },
                {
                  "name": "measurement_delete",
                  "type": "dynamic",
                  "label": "Measurement Name",
                  "helper": "",
                  "group": "Delete Parameters",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "parent": "from_query_del",
                  "condition": "!{parent}",
                  "dynamicType": "text",
                  "options": null,
                  "fields": null,
                  "url": null
                },
                {
                  "name": "start_delete",
                  "type": "text",
                  "label": "Start",
                  "helper": "Define the starting time to consider for deleting your data",
                  "group": "Delete Parameters",
                  "value": "1970-01-01T00:00:00Z",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "stop_delete",
                  "type": "text",
                  "label": "Stop",
                  "helper": "Define the stopping time to consider for deleting your data",
                  "group": "Delete Parameters",
                  "value": null,
                  "description": "",
                  "validation": null
                },
                {
                  "name": "bucket_read",
                  "type": "text",
                  "label": "Bucket Name",
                  "helper": "",
                  "group": "Read Parameters",
                  "value": "influx-bu",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "start_read",
                  "type": "text",
                  "label": "Start",
                  "helper": "Define the starting time to consider for reading your data",
                  "group": "Read Parameters",
                  "value": "1970-01-01T00:00:00Z",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "stop_read",
                  "type": "text",
                  "label": "Stop",
                  "helper": "Define the stopping time to consider for reading your data",
                  "group": "Read Parameters",
                  "value": null,
                  "description": "",
                  "validation": null
                }
              ],
              "click": null,
              "icon": "RiStackFill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": true,
                "bucket_save": "influx-bu",
                "manual": false,
                "bucket_del": "influx-bu",
                "from_query_del": false,
                "start_delete": "1970-01-01T00:00:00Z",
                "stop_delete": "",
                "bucket_read": "influx-bu",
                "start_read": "1970-01-01T00:00:00Z",
                "stop_read": "",
                "measurement_delete": ""
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 2397,
            "y": -141
          },
          "__class__": "Node"
        },
        {
          "id": "7d8797a0-5983-485e-92cf-41743696d4a4",
          "position": {
            "x": 2037,
            "y": -122
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Grouper",
            "events": null,
            "description": "### Description\nThe GROUPER component is used to group the elements received in input. The items will be returned in batches with a maximum size equal to **Group size**.\n\n### Input\nIn this case there is no fixed input format.\n\n### Output\nIn output lists of elements received in input with a maximum length equal to **Group size**.",
            "inputs": [
              {
                "id": "input",
                "label": "input"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "n",
                  "label": "Group size",
                  "type": "number"
                }
              ],
              "click": null,
              "icon": "RiGroupFill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": false,
                "n": "1000"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 2037,
            "y": -122
          },
          "__class__": "Node"
        },
        {
          "id": "4eb76c17-6b4d-47ee-8674-fcfa56869e1b",
          "position": {
            "x": 2220,
            "y": -138
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Delay",
            "events": null,
            "description": "### Description\nThe DELAY component is used to set a communication wait time between the previous and next components.\n\n### Input\nIn this case there is no fixed input format.\n\n### Output\nIn this case there is no fixed output format.",
            "inputs": [
              {
                "id": "input",
                "label": "input"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Time",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "time",
                  "type": "number",
                  "label": "Time",
                  "helper": "Expressed in milliseconds",
                  "validation": {
                    "required": "Required field"
                  }
                }
              ],
              "click": null,
              "icon": "RiTimerFill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": false,
                "time": "2000"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 2220,
            "y": -138
          },
          "__class__": "Node"
        },
        {
          "id": "79c79b19-c73e-4092-9cbf-9fd4a883c941",
          "position": {
            "x": 1225,
            "y": 107
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "InfluxDB",
            "events": null,
            "description": "",
            "inputs": [
              {
                "id": "save",
                "label": "Save",
                "service": "save_data",
                "to": "save"
              },
              {
                "id": "read",
                "label": "Read",
                "service": "read",
                "to": "read"
              },
              {
                "id": "delete",
                "label": "Delete",
                "service": "delete_data",
                "to": "delete"
              },
              {
                "id": "query",
                "label": "Query",
                "service": "query",
                "to": "query"
              }
            ],
            "outputs": [
              {
                "id": "save",
                "label": "Save"
              },
              {
                "id": "read",
                "label": "Read"
              },
              {
                "id": "delete",
                "label": "Delete"
              },
              {
                "id": "query",
                "label": "Query"
              }
            ],
            "configured": true,
            "options": {
              "group": "Custom",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "bucket_save",
                  "type": "text",
                  "label": "Bucket Name",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": "influx-bu",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "manual",
                  "type": "boolean",
                  "label": "Manual",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": true,
                  "description": "",
                  "validation": null
                },
                {
                  "name": "measurement_name",
                  "type": "dynamic",
                  "label": "Measurement Name",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "parent": "manual",
                  "condition": "{parent}",
                  "dynamicType": "text",
                  "options": null,
                  "fields": null,
                  "url": null
                },
                {
                  "name": "time",
                  "type": "dynamic",
                  "label": "Time Key",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "parent": "manual",
                  "condition": "{parent}",
                  "dynamicType": "text",
                  "options": null,
                  "fields": null,
                  "url": null
                },
                {
                  "name": "tags",
                  "type": "dynamic",
                  "label": "Tags",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "parent": "manual",
                  "condition": "{parent}",
                  "dynamicType": "multiKeyValue",
                  "options": null,
                  "fields": [
                    {
                      "name": "tag_key",
                      "placeholder": "Tag Key",
                      "validation": null
                    }
                  ],
                  "url": null
                },
                {
                  "name": "fields",
                  "type": "dynamic",
                  "label": "Fields",
                  "helper": "",
                  "group": "Save Parameters",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "parent": "manual",
                  "condition": "{parent}",
                  "dynamicType": "multiKeyValue",
                  "options": null,
                  "fields": [
                    {
                      "name": "field_key",
                      "placeholder": "Field Key",
                      "validation": null
                    }
                  ],
                  "url": null
                },
                {
                  "name": "bucket_del",
                  "type": "text",
                  "label": "Bucket Name",
                  "helper": "",
                  "group": "Delete Parameters",
                  "value": "influx-bu",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "from_query_del",
                  "type": "boolean",
                  "label": "From query",
                  "helper": "",
                  "group": "Delete Parameters",
                  "value": false,
                  "description": "",
                  "validation": null
                },
                {
                  "name": "measurement_delete",
                  "type": "dynamic",
                  "label": "Measurement Name",
                  "helper": "",
                  "group": "Delete Parameters",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "parent": "from_query_del",
                  "condition": "!{parent}",
                  "dynamicType": "text",
                  "options": null,
                  "fields": null,
                  "url": null
                },
                {
                  "name": "start_delete",
                  "type": "text",
                  "label": "Start",
                  "helper": "Define the starting time to consider for deleting your data",
                  "group": "Delete Parameters",
                  "value": "1970-01-01T00:00:00Z",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "stop_delete",
                  "type": "text",
                  "label": "Stop",
                  "helper": "Define the stopping time to consider for deleting your data",
                  "group": "Delete Parameters",
                  "value": null,
                  "description": "",
                  "validation": null
                },
                {
                  "name": "bucket_read",
                  "type": "text",
                  "label": "Bucket Name",
                  "helper": "",
                  "group": "Read Parameters",
                  "value": "influx-bu",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "measurement_read",
                  "type": "text",
                  "label": "Measurement Name",
                  "helper": "",
                  "group": "Read Parameters",
                  "value": null,
                  "description": "",
                  "validation": null
                },
                {
                  "name": "start_read",
                  "type": "text",
                  "label": "Start",
                  "helper": "Define the starting time to consider for reading your data",
                  "group": "Read Parameters",
                  "value": "1970-01-01T00:00:00Z",
                  "description": "",
                  "validation": null
                },
                {
                  "name": "stop_read",
                  "type": "text",
                  "label": "Stop",
                  "helper": "Define the stopping time to consider for reading your data",
                  "group": "Read Parameters",
                  "value": null,
                  "description": "",
                  "validation": null
                }
              ],
              "click": null,
              "icon": "RiStackFill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": true,
                "bucket_save": "influx-bu",
                "manual": true,
                "bucket_del": "influx-bu",
                "from_query_del": false,
                "start_delete": "1970-01-01T00:00:00Z",
                "stop_delete": "",
                "bucket_read": "influx-bu",
                "measurement_read": "fake_data",
                "start_read": "1970-01-01T00:00:00Z",
                "stop_read": "",
                "measurement_name": "",
                "time": "",
                "measurement_delete": ""
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 1225,
            "y": 107
          },
          "__class__": "Node"
        }
      ],
      "edges": [
        {
          "id": "reactflow__edge-41f411cc-4327-4e9e-88f6-b858e5a07ffdoutput-7ad6908c-2926-4b13-a9d5-c57893159358input",
          "source": "41f411cc-4327-4e9e-88f6-b858e5a07ffd",
          "sourceHandle": "output",
          "target": "7ad6908c-2926-4b13-a9d5-c57893159358",
          "targetHandle": "input",
          "data": {
            "startColor": "#F8637A",
            "stopColor": "#D770AD"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-56d0ebfc-963c-41fd-90c1-419829d55a59output-0a11bda7-fc6d-4649-a6eb-d3543d33dcd8input",
          "source": "56d0ebfc-963c-41fd-90c1-419829d55a59",
          "sourceHandle": "output",
          "target": "0a11bda7-fc6d-4649-a6eb-d3543d33dcd8",
          "targetHandle": "input",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#D770AD"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-0b0d3081-1e1f-406f-b56d-65e5933c5ddcoutput-d0ec7c81-8c15-48f2-99e9-3c9fff920e3cdelete",
          "source": "0b0d3081-1e1f-406f-b56d-65e5933c5ddc",
          "sourceHandle": "output",
          "target": "d0ec7c81-8c15-48f2-99e9-3c9fff920e3c",
          "targetHandle": "delete",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-28932479-4bae-4255-b74a-bca07f4b9deeoutput-35435eae-329c-42ed-9333-58aaa3f4f9e9delete",
          "source": "28932479-4bae-4255-b74a-bca07f4b9dee",
          "sourceHandle": "output",
          "target": "35435eae-329c-42ed-9333-58aaa3f4f9e9",
          "targetHandle": "delete",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-0a11bda7-fc6d-4649-a6eb-d3543d33dcd8output-0ff5824b-f7d7-4faa-ba2b-cf449636eb06query",
          "source": "0a11bda7-fc6d-4649-a6eb-d3543d33dcd8",
          "sourceHandle": "output",
          "target": "0ff5824b-f7d7-4faa-ba2b-cf449636eb06",
          "targetHandle": "query",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-0ff5824b-f7d7-4faa-ba2b-cf449636eb06query-73c15504-172b-4284-ac1a-822aa19aeadainput",
          "source": "0ff5824b-f7d7-4faa-ba2b-cf449636eb06",
          "sourceHandle": "query",
          "target": "73c15504-172b-4284-ac1a-822aa19aeada",
          "targetHandle": "input",
          "data": {
            "startColor": "#888",
            "stopColor": "#D770AD"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-b8f5b458-a66d-414d-ada0-32019d0e55cfoutput-2cc97caa-b3a0-44cf-acef-b6c62b5e16f9input",
          "source": "b8f5b458-a66d-414d-ada0-32019d0e55cf",
          "sourceHandle": "output",
          "target": "2cc97caa-b3a0-44cf-acef-b6c62b5e16f9",
          "targetHandle": "input",
          "data": {
            "startColor": "#F8637A",
            "stopColor": "#D770AD"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-7ad6908c-2926-4b13-a9d5-c57893159358output-d6af54ab-2ba0-468a-884b-8ea73513bd58save",
          "source": "7ad6908c-2926-4b13-a9d5-c57893159358",
          "sourceHandle": "output",
          "target": "d6af54ab-2ba0-468a-884b-8ea73513bd58",
          "targetHandle": "save",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-2cc97caa-b3a0-44cf-acef-b6c62b5e16f9output-7d8797a0-5983-485e-92cf-41743696d4a4input",
          "source": "2cc97caa-b3a0-44cf-acef-b6c62b5e16f9",
          "sourceHandle": "output",
          "target": "7d8797a0-5983-485e-92cf-41743696d4a4",
          "targetHandle": "input",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#D770AD"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-7d8797a0-5983-485e-92cf-41743696d4a4output-4eb76c17-6b4d-47ee-8674-fcfa56869e1binput",
          "source": "7d8797a0-5983-485e-92cf-41743696d4a4",
          "sourceHandle": "output",
          "target": "4eb76c17-6b4d-47ee-8674-fcfa56869e1b",
          "targetHandle": "input",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#FA804C"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-4eb76c17-6b4d-47ee-8674-fcfa56869e1boutput-d3b24ad8-3313-41d1-a560-8df58ff61b32save",
          "source": "4eb76c17-6b4d-47ee-8674-fcfa56869e1b",
          "sourceHandle": "output",
          "target": "d3b24ad8-3313-41d1-a560-8df58ff61b32",
          "targetHandle": "save",
          "data": {
            "startColor": "#FA804C",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-d08bb476-31b1-4464-bb42-94a1f9679811output-79c79b19-c73e-4092-9cbf-9fd4a883c941read",
          "source": "d08bb476-31b1-4464-bb42-94a1f9679811",
          "sourceHandle": "output",
          "target": "79c79b19-c73e-4092-9cbf-9fd4a883c941",
          "targetHandle": "read",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        }
      ],
      "__class__": "Graph"
    }
  },
  "open": [
    "main"
  ],
  "active": "main",
  "version": "1.0.0",
  "__class__": "Project"
}